#░█▀█░█░█░▀█▀░█▀█░░░░░█▀▀░█▀▀░█▀█░█▀▀░█▀▄░█▀█░▀█▀░█▀▀░█▀▄
#░█▀█░█░█░░█░░█░█░▄▄▄░█░█░█▀▀░█░█░█▀▀░█▀▄░█▀█░░█░░█▀▀░█░█
#░▀░▀░▀▀▀░░▀░░▀▀▀░░░░░▀▀▀░▀▀▀░▀░▀░▀▀▀░▀░▀░▀░▀░░▀░░▀▀▀░▀▀░
# DO NOT UPDATE: This file is managed by "build-configs"

orbs:
  aws-cli: circleci/aws-cli@3.1.3

parameters:
  image_tag:
    default: "{{ product }}-{{ name }}"
    type: string
  registry:
    default: "{{ dockerfile.registry }}"
    type: string

commands:
  setup-base:
    steps:
      - checkout

      - aws-cli/install

      - run:
          name: Install Doppler CLI - latest
          command: |
            (curl -Ls https://cli.doppler.com/install.sh \
              || wget -qO- https://cli.doppler.com/install.sh) \
              | sh -s -- --no-install --no-package-manager

            mkdir -p /tmp/doppler
            mv ./doppler /tmp/doppler/doppler

            echo 'export PATH=/tmp/doppler:"$PATH"' >> "$BASH_ENV"

      - run:
          name: Install Just CLI - latest
          command: |
            curl \
              --proto '=https' \
              --tlsv1.2 -sSf https://just.systems/install.sh \
              | bash -s -- --to /tmp/just

            echo 'export PATH=/tmp/just:"$PATH"' >> "$BASH_ENV"

      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.17

      - run:
          name: Login to ECR
          command: just login

jobs:
  build:
    docker:
      - image: cimg/base:current
    resource_class: small

    steps:
      - setup-base

      - run:
          name: Build images
          command: just build "${CIRCLE_SHA1}"

      - run:
          name: Push images
          command: just push "${CIRCLE_SHA1}"

  lint:
    docker:
      - image: << pipeline.parameters.registry >>/<< pipeline.parameters.image_tag >>:${CIRCLE_SHA1}
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    resource_class: small
    working_directory: /usr/src/app

    steps:
      - run:
          name: Run lint
          command: just lint

  test:
    docker:
      - image: << pipeline.parameters.registry >>/<< pipeline.parameters.image_tag >>:${CIRCLE_SHA1}
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    resource_class: {{ library.resource_class }}
    working_directory: /usr/src/app

    steps:
      - run:
          name: Run tests
          command: just test

      - store_artifacts:
          path: ./coverage

      - store_test_results:
          path: ./coverage

  publish:
    docker:
      - image: cimg/base:current
    resource_class: small

    steps:
      - setup-base

      - run:
          name: Publish package
          command: |
            export CURRENT_TAG="$(git describe --tags --abbrev=0)"
            export CURRENT_VERSION=$(cat package.json | jq -r ".version")

            if [ "$CURRENT_TAG" != "$CURRENT_VERSION" ]; then
              echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

              docker container run \
                --env DOPPLER_TOKEN \
                --rm \
                --tty \
                --volume "$(pwd)/.npmrc:/usr/src/app/.npmrc" \
                << pipeline.parameters.registry >>/<< pipeline.parameters.image_tag >>:${CIRCLE_SHA1} \
                just publish
            else
              echo "Skipped publish due to no changes in version."
            fi

workflows:
  build-preview-update:
    jobs:
      - build:
          context:
            - altf4llc-aws

      - lint:
          context:
            - altf4llc-aws
          requires:
            - build

      - test:
          context:
            - altf4llc-aws
          requires:
            - build

      - publish:
          context:
            - altf4llc-aws
          filters:
            branches:
              only:
                - main
          requires:
            - test

version: 2.1
