name: terraform

on:
  pull_request:
  push:
    branches:
      - main
  {{- if .Schedule }}
  schedule:
    - cron: "{{ .Schedule }}"
  {{- end }}
  workflow_dispatch:

env:
  CACHIX_BINARY_CACHE: {{ .Nix.Cachix.BinaryCache }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v15
        with:
          authToken: ${{"{{"}} secrets.ALTF4LLC_CACHIX_AUTH_TOKEN {{"}}"}}
          name: ${{"{{"}} env.CACHIX_BINARY_CACHE {{"}}"}}
      - uses: actions/checkout@v4
      - run: nix develop -c just check

  plan:
    runs-on: ubuntu-latest
    needs: check
    concurrency:
      group: tf-lock
      cancel-in-progress: false
    permissions:
      contents: read
      id-token: write
    env:
      TF_VAR_PLATFORM_DIRECTORY_TOKEN: ${{"{{"}} secrets.TF_VAR_PLATFORM_DIRECTORY_TOKEN {{"}}"}}
    steps:
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v15
        with:
          authToken: ${{"{{"}} secrets.ALTF4LLC_CACHIX_AUTH_TOKEN {{"}}"}}
          name: ${{"{{"}} env.CACHIX_BINARY_CACHE {{"}}"}}
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-west-2
          role-to-assume: {{ .Role.PlanARN }}
      - run: aws sts get-caller-identity
      - uses: actions/checkout@v4
      - run: nix develop -c just init
      - run: nix develop -c just validate
      - run: nix develop -c just plan
      - uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: terraform.tfplan

  apply:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: prod
    permissions:
      contents: read
      id-token: write
    concurrency:
      group: tf-lock
      cancel-in-progress: false
    env:
      TF_VAR_PACKER_SSH_PUBLIC_KEY: ${{"{{"}} secrets.TF_VAR_PACKER_SSH_PUBLIC_KEY {{"}}"}}
    steps:
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v15
        with:
          authToken: ${{"{{"}} secrets.ALTF4LLC_CACHIX_AUTH_TOKEN {{"}}"}}
          name: ${{"{{"}} env.CACHIX_BINARY_CACHE {{"}}"}}
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-west-2
          role-to-assume: {{ .Role.ApplyARN }}
      - run: aws sts get-caller-identity
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: tf-plan
      - run: nix develop -c just init
      - run: nix develop -c just apply
